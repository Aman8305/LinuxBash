‘’‘
日志切割,主要涉及nginx,tomcat,php
'''

nginx日志切割

首先切换到/etc/logrotate.d
cat nginx

#也可以分开写
#/var/log/nginx/access.log /var/log/nginx/err.log{}
/usr/local/nginx/logs/*.log {
#频次为每天运行 
    daily
#保留3天的日志 
    rotate 3
#如果日志文件不存在，则不报错，直接忽略
    missingok
#如果日志文件为空则不执行轮替操作
    notifempty
    compress
#转储后的日志文件放入指定的目录，必须和当前日志文件在同一个文件系统；
    olddir /data/log_backup/
#日志共享脚本，也就是说等access和error两个日志都rotate之后再执行下面的脚本
    sharedscripts
#日期格式默认access.log-20171206
    dateext
#总是与compress选项一起用，delaycompress选项指示logrotate不要将最近的归档压缩，压缩将在下一次轮循周期进行。这在你或任何软件仍然需要读取最新归档时很有用。
    delaycompress
    su root
    postrotate
  [ -e /usr/local/nginx/logs/nginx.pid ] && /bin/kill -USR1 $(cat /usr/local/nginx/logs/nginx.pid 2>/dev/null) 2>/dev/null || :
    endscript
}

php

cat php

#也可以分开写
#/var/log/nginx/access.log /var/log/nginx/err.log{}
/usr/local/nginx/logs/*.log {
#频次为每天运行 
    daily
#保留3天的日志 
    rotate 3
#如果日志文件不存在，则不报错，直接忽略
    missingok
#如果日志文件为空则不执行轮替操作
    notifempty
    compress
#转储后的日志文件放入指定的目录，必须和当前日志文件在同一个文件系统；
    olddir /data/log_backup/
#日志共享脚本，也就是说等access和error两个日志都rotate之后再执行下面的脚本
    sharedscripts
#日期格式默认access.log-20171206
    dateext
#总是与compress选项一起用，delaycompress选项指示logrotate不要将最近的归档压缩，压缩将在下一次轮循周期进行。这在你或任何软件仍然需要读取最新归档时很有用。
    delaycompress
    su root
    postrotate
  [ -e /usr/local/nginx/logs/nginx.pid ] && /bin/kill -USR1 $(cat /usr/local/nginx/logs/nginx.pid 2>/dev/null) 2>/dev/null || :
    endscript
}

tomcat

cat tomcat
# cat /etc/logrotate.d/tomcat
/usr/local/tomcat/logs/catalina.out {
daily
rotate 5
missingok
dateext
compress
notifempty
copytruncate
}

运行的话执行
logrotate --force /etc/logrotate.d/tomcat/php/nginx
